/*************************************
Edited By: Blake North
Last Edited: 12/19/2018
Description: This script will handle play animations
Notes: Since I removed every movement other than jump this script is mostly useless. It will follow along the class guide to get credit and for later use in a later game.
*************************************/
class PlayerAnimation : ZilchComponent
{
  //Dependencies
    //Needed so we can change sprite
    [Dependency]
    var Sprite : Sprite;
    //Used to help us judge if the player is jumping or not
    [Dependency]
    var SweptController : SweptController;
    //Tells us what keys to listen for
    [Dependency]
    var SweptInput2D : SweptInput2D;
  
  //Properties
    //Sprite when player is standing still
    [Property]
    var BaseSprite : SpriteSource = SpriteSource.Square;
    //Sprite when player is moving
    [Property]
    var WalkingSprite : SpriteSource = SpriteSource.Circle;
    //Sprite when player is jumping
    [Property]
    var JumpingSprite : SpriteSource = SpriteSource.CircleBordered;
  
  function Initialize(init : CogInitializer)
  {
    Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
  }

  function OnLogicUpdate(event : UpdateEvent)
  {
    //Variables to help find if we are moving left or right
    var rightDown = Zero.Keyboard.KeyIsDown(this.SweptInput2D.RightKey);
    var leftDown = Zero.Keyboard.KeyIsDown(this.SweptInput2D.LeftKey);
    
    //Idle state
    if(this.Sprite.SpriteSource == this.BaseSprite)
    {
      //If a button is currently down to move left or right change to walk
      if((rightDown || leftDown) && !(rightDown && leftDown))
      {
        this.Sprite.SpriteSource = this.WalkingSprite;
      }
      //if not on ground switch to jump
      if(!this.SweptController.Grounded)
      {
        this.Sprite.SpriteSource = this.JumpingSprite;
      }
    }
    //Walking state
    else if(this.Sprite.SpriteSource == this.WalkingSprite)
    {
      //if not moving left or right switch to idle
      if(!(rightDown || leftDown) || (rightDown && leftDown))
      {
        this.Sprite.SpriteSource = this.BaseSprite;
      }
      //if not on ground switch to jump
      if(!this.SweptController.Grounded)
      {
        this.Sprite.SpriteSource = this.JumpingSprite;
      }
    }
    //Jumping state
    else if(this.Sprite.SpriteSource == this.JumpingSprite)
    {
      //if on the ground switch to idle
      if(this.SweptController.Grounded)
      {
        this.Sprite.SpriteSource = this.BaseSprite;
      }
    }
  }
}
