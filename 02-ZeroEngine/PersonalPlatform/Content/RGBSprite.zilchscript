/***********************************************************
Edited By: Blake North
Last Edited: 12/17/2018
Description: This script allows to change the owners colors between selected colors
***********************************************************/
class RGBSprite : ZilchComponent
{
  [Dependency]
  var Sprite : Sprite = null;
  
  //Variables that are the colors to swap between
    //First color that it starts with
    [Property]
    var FirstColor : Real4 = Real4(1, 0, 0, 1);
    
    //Second color to change to
    [Property]
    var SecondColor : Real4 = Real4(0, 0, 0, 1);
    
    //Third color to change to
    [Property]
    var ThirdColor : Real4 = Real4(0, 0, 0, 1);
    
    //Fourth color to change to
    [Property]
    var FourthColor : Real4 = Real4(0, 0, 0, 1);
    
    //Fifth color to change to
    [Property]
    var FifthColor : Real4 = Real4(0, 0, 0, 1);
    
    //Sixth color to change to
    [Property]
    var SixthColor : Real4 = Real4(0, 0, 0, 1);
  
  [Property]
  var ColorChangeTime : Real = 0;
  
  [Property]
  var ColorEase : Ease = Ease.QuadInOut;
  
  function Initialize(init : CogInitializer)
  {
    this.TurnFirstColor();
  }
  
  //This function will turn the owner to be the first color over a period of time
  function TurnFirstColor()
  {
    //Make the list of things to happen with actions
    var seq = Action.Sequence(this.Owner.Actions);
    
    //change to the first color overtime
    Action.Property(seq, @this.Sprite.VertexColor, this.FirstColor, this.ColorChangeTime, this.ColorEase);
    
    Action.Call(seq, this.TurnSecondColor);
  }
  
  //This function will turn the owner to be the second color over a period of time
  function TurnSecondColor()
  {
    //Make the list of things to happen with actions
    var seq = Action.Sequence(this.Owner.Actions);
    
    //change to the second color overtime
    Action.Property(seq, @this.Sprite.VertexColor, this.SecondColor, this.ColorChangeTime, this.ColorEase);
    
    Action.Call(seq, this.TurnThirdColor);
  }
  
  //This function will turn the owner to be the third color over a period of time
  function TurnThirdColor()
  {
    //Make the list of things to happen with actions
    var seq = Action.Sequence(this.Owner.Actions);
    
    //change to the third color overtime
    Action.Property(seq, @this.Sprite.VertexColor, this.ThirdColor, this.ColorChangeTime, this.ColorEase);
    
    Action.Call(seq, this.TurnFourthColor);
  }
  //This function will turn the owner to be the fourth color over a period of time
  function TurnFourthColor()
  {
    //Make the list of things to happen with actions
    var seq = Action.Sequence(this.Owner.Actions);
    
    //change to the fourth color overtime
    Action.Property(seq, @this.Sprite.VertexColor, this.FourthColor, this.ColorChangeTime, this.ColorEase);
    
    Action.Call(seq, this.TurnFifthColor);
  }
  //This function will turn the owner to be the fifth color over a period of time
  function TurnFifthColor()
  {
    //Make the list of things to happen with actions
    var seq = Action.Sequence(this.Owner.Actions);
    
    //change to the fifth color overtime
    Action.Property(seq, @this.Sprite.VertexColor, this.FifthColor, this.ColorChangeTime, this.ColorEase);
    
    Action.Call(seq, this.TurnSixthColor);
  }
  //This function will turn the owner to be the sixth color over a period of time
  function TurnSixthColor()
  {
    //Make the list of things to happen with actions
    var seq = Action.Sequence(this.Owner.Actions);
    
    //change to the sixth color overtime
    Action.Property(seq, @this.Sprite.VertexColor, this.SixthColor, this.ColorChangeTime, this.ColorEase);
    
    Action.Call(seq, this.TurnFirstColor);
  }
}
